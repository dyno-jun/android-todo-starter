name: Android CD with Slack Integration

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Upload to Slack
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      # 3. Cache Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      # 4. Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 5. Accept licenses
      - name: Accept licenses
        run: yes | sdkmanager --licenses || true

      # 6. Build release APK
      - name: Build APK
        run: ./gradlew assembleDebug

      # 7. Verify APK Path
      - name: Verify APK Path
        run: ls -al app/build/outputs/apk/debug

      # 8. Get Upload URL from Slack
      - name: Get Slack Upload URL
        id: get_upload_url
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          FILE_PATH=app/build/outputs/apk/debug/app-debug.apk
          FILE_SIZE=$(stat --format="%s" $FILE_PATH)  # Get file size in bytes
          
          UPLOAD_RESPONSE=$(curl -s -X POST https://slack.com/api/files.getUploadURLExternal \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"filename\":\"app-debug.apk\",\"length\":$FILE_SIZE}")

          echo "UPLOAD_RESPONSE=$UPLOAD_RESPONSE" >> $GITHUB_ENV
          echo "UPLOAD_URL=$(echo $UPLOAD_RESPONSE | jq -r '.upload_url')" >> $GITHUB_ENV
          echo "FILE_ID=$(echo $UPLOAD_RESPONSE | jq -r '.file_id')" >> $GITHUB_ENV

      # 9. Upload File to Slack
      - name: Upload APK to Slack
        run: |
          curl -X POST $UPLOAD_URL \
          -H "Content-Type: application/octet-stream" \
          --data-binary @app/build/outputs/apk/debug/app-debug.apk

      # 10. Finalize File and Share
      - name: Finalize and Share File on Slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          curl -X POST https://slack.com/api/files.completeUploadExternal \
          -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
                "files": [{"id": "'$FILE_ID'"}],
                "channel_id": "deploy",
                "initial_comment": "New APK build is available for version '${{ github.ref_name }}'"
              }'